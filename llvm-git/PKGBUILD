# Maintainer: Thomas Dziedzic < gostrc at gmail >
# Contributor: Roberto Alsina <ralsina@kde.org>
# Contributor: Tomas Lindquist Olsen <tomas@famolsen.dk>
# Contributor: Anders Bergh <anders@archlinuxppc.org>
# Contributor: Tomas Wilhelmsson <tomas.wilhelmsson@gmail.com>

_gitroot="http://llvm.org/git/llvm"
_gitname="llvm"
_realver="3.4svn"

pkgname=(llvm-git llvm-libs-git llvm-ocaml-git clang-git clang-analyzer-git)
pkgver=20130717
pkgrel=0812
pkgdesc='Low Level Virtual Machine with AMDGPU enabled to build r600g shader llvm support'
arch=('i686' 'x86_64')
url="http://llvm.org"
license=('custom:University of Illinois/NCSA Open Source License')
depends=('libffi' 'python2' 'ocaml')
makedepends=('git')
options=('!strip')
source=(git+$_gitroot
        git+http://llvm.org/git/clang.git
        git+http://llvm.org/git/compiler-rt.git
)
md5sums=(SKIP SKIP SKIP)

prepare() {
  cd "${srcdir}/${_gitname}"

  git clone ${srcdir}/clang tools/clang
  git clone ${srcdir}/compiler-rt projects/compiler-rt
}

build() {
  cd "${srcdir}/${_gitname}"

  sed -i 's/python$/python2/' utils/llvm-build/llvm-build

  # Include location of libffi headers in CPPFLAGS
  export CPPFLAGS="$CPPFLAGS $(pkg-config --cflags libffi)"

  # Force the use of GCC instead of clang
  PYTHON=python2 CC=gcc CXX=g++ \
  ./configure \
    --prefix=/usr \
    --libdir=/usr/lib/llvm \
    --sysconfdir=/etc \
    --enable-shared \
    --enable-libffi \
    --enable-targets=all \
    --enable-experimental-targets=R600 \
    --disable-expensive-checks \
    --disable-debug-runtime \
    --disable-assertions \
    --with-binutils-include=/usr/include \
    --enable-optimized

  make REQUIRES_RTTI=1 ENABLE_OPTIMIZED=1
}

package_llvm-git() {
  pkgdesc="Low Level Virtual Machine (git)"
  depends=('llvm-libs-git' 'perl')
  provides=('llvm')
  conflicts=('llvm')

  cd "${srcdir}/${_gitname}"

  # We move the clang directory out of the tree so it won't get installed and
  # then we bring it back in for the clang package
  mv tools/clang "$srcdir/clang.tmp"

  # -j1 is due to race conditions during the installation of the OCaml bindings
  make -j1 DESTDIR="$pkgdir" install
  mv "$srcdir/clang.tmp" tools/clang

  # The runtime library goes into llvm-libs
  mv "$pkgdir/usr/lib/libLLVM-$_realver.so" "$srcdir"

  # OCaml bindings go to a separate package
  rm -rf "$srcdir"/ocaml
  mv "$pkgdir"/usr/lib/ocaml "$srcdir"

  # Fix permissions of static libs
  chmod -x "$pkgdir"/usr/lib/*.a

  # Get rid of example Hello transformation
  rm "$pkgdir"/usr/lib/*LLVMHello.*

  install -m755 -d "$pkgdir/usr/share/"
  mv "$pkgdir/usr/docs" "$pkgdir/usr/share/doc"

  install -Dm644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_llvm-libs-git() {
  pkgdesc="Low Level Virtual Machine (runtime library) (git)"
  depends=('gcc-libs' 'zlib' 'libffi')
  provides=('llvm-libs')
  conflicts=('llvm-libs')

  cd "${srcdir}/${_gitname}"

  install -D "$srcdir/libLLVM-$_realver.so" "$pkgdir/usr/lib/libLLVM-$_realver.so"

  install -Dm644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_llvm-ocaml-git() {
  pkgdesc="OCaml bindings for LLVM (git)"
  depends=('llvm-git' 'ocaml')
  provides=('llvm-ocaml')
  conflicts=('llvm-ocaml')

  cd "${srcdir}/${_gitname}"

  install -d "$pkgdir"/{usr/lib,usr/share/doc/llvm}
  cp -r "$srcdir/ocaml" "$pkgdir/usr/lib"

  # Remove execute bit from static libraries
  chmod -x "$pkgdir"/usr/lib/ocaml/libllvm*.a

  install -Dm644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_clang-git() {
  pkgdesc="C language family frontend for LLVM (git)"
  url="http://clang.llvm.org/"
  depends=('llvm-git' 'gcc')
  provides=('clang')
  conflicts=('clang')

  cd "${srcdir}/${_gitname}/tools/clang"
  make DESTDIR="$pkgdir" install
  rm -rf "$pkgdir/usr/docs"

  install -Dm644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_clang-analyzer-git() {
  pkgdesc="A source code analysis framework (git)"
  url="http://clang-analyzer.llvm.org/"
  depends=('clang-git' 'python2')
  provides=('clang-analyzer')
  conflicts=('clang-analyzer')

  cd "${srcdir}/${_gitname}/tools/clang"

  install -d "$pkgdir"/usr/{bin,lib/clang-analyzer}
  for _tool in scan-{build,view}; do
    cp -r tools/$_tool "$pkgdir/usr/lib/clang-analyzer/"
    ln -s /usr/lib/clang-analyzer/$_tool/$_tool "$pkgdir/usr/bin/"
  done

  # scan-build looks for clang within the same directory
  ln -s /usr/bin/clang "$pkgdir/usr/lib/clang-analyzer/scan-build/"

  # Relocate man page
  install -d "$pkgdir/usr/share/man/man1"
  mv "$pkgdir/usr/lib/clang-analyzer/scan-build/scan-build.1" \
      "$pkgdir/usr/share/man/man1/"

  # Use Python 2
  sed -i \
    -e 's|env python$|&2|' \
    -e 's|/usr/bin/python$|&2|' \
    "$pkgdir/usr/lib/clang-analyzer/scan-view/scan-view" \
    "$pkgdir/usr/lib/clang-analyzer/scan-build/set-xcode-analyzer"

  # Compile Python scripts
  python2 -m compileall "$pkgdir/usr/lib/clang-analyzer"
  python2 -O -m compileall "$pkgdir/usr/lib/clang-analyzer"

  install -Dm644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}
# vim: ft=sh syn=sh et

